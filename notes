main views and their unique attributes
/
  all posts by all friends
/users/:id
  user profile
/users/:id/edit
  edit profile
/messages
  messages index
/messages/:name
  conversation /w :name
/settings
  account settings

main page pieces
top bar
  search
  friend requests
  inbox
  notifications
  index link
  profile link
  dropdown options
    settings link
    logout
left column
  profile link
  index link
  messages index link
  photos index link
right column
  recommendations
    people you may know
main column /w content


Basic Structure

1. Models

Users
    email
    username
    password_digest
    session_token
    gender
    birthday
    profile pic
Messages
    user_from
    user_to
    body
Posts
    user_id
    title
    body
Comments
    user_id
    post_id
    body   
Friends
    user1
    user2
Photos
    user_id
    photo
Likes
    user_id
    likeable_id

2. Associations

Users
    many messages
    many posts
    many comments
    many friends
    many photos
    many likes
Posts
    many comments
    many likes
Comments
    many likes
Photos
    many likes
    many comments

Basic Execution

Phase 1 - Skeleton

1. Authentication
2. Profile Pages
3. Private Message Index
4. Messages
5. Posts Index
6. Posts
7. Comments
8. Friend Requests
9. Friends
10. Friends Posts Index

Phase 2 - Initial Backbone

1. Profile View
2. Messages View
3. Posts View
  Can post, comment, and like
4. Container View

Phase 3

11. Figaro
12. Imagemagick



BREAK IT DOWN

  FIRST MAKE PHOTOS INDEX
    ROUTES
    RETURN HELLO WORLD
    THEN SOME JSON
    THEN HOOK UP SOME MODELS
  HOOK IT UP TO BACKBONE

  ADD IMAGES
    BE REALLY SCARED

13. User Photos Index
14. Photos

15. Likes

Phase 4 - Features

1. You may know this person
      Top 5 friends of friends who are not friends or me sorted by how many friends of yours they are friends with
2. Feed
      All friend activity sorted by chronological order
3. Have to be the friend of a person to view their post.

Phase 5 - Backbone

1. Profile converted
      Can update properties
4. Photos converted
      Can comment, like, and browse
5. Auto-update

Phase 6 - CSS

1. Write a reasonable interface
2. Confirmation popups

Phase 7 - Refactor

1. Model-level validations, model/controller refactoring
2. Backbone refactoring - views
3. Network profiling & optimization



I NEED MODURALIZED SHIT IN THE FINAL PRODUCT

EASIEST WAY TO HAVE MODURALIZED SHIT IS JBUILDER + A SHIT TON OF VIEWS

LOAD EVERYTHING AS YOU NEED IT, NOT AT THE BEGINNING

LOAD THINGS IN BATCHES /W JBUILDER AND RECURSIVE PARSING

VIEWS ARE RECURSIVE
VIEWS HAVE THEIR OWN UPDATING, EVENTS & SHIT
FORMS RENDER ERRORS ABOVE THEMSELVES FOR NOW
VIEWS CONTAINING FORMS LISTEN FOR ADD/DELETE EVENTS AND RE-RENDER
  ONLY FOR FORMS THAT RENDER FROM ALOT OF DIFFERENT PLACES
possible note: find a way to update specific sub-views
  probably involves finding ids
  holy shit i want to do this so bad
  prepend views and remove views
    no flicker & rediculously efficient; seems legit
